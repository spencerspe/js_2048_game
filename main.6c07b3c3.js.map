{"version":3,"sources":["scripts/main.js"],"names":["field","document","querySelectorAll","tableRows","startButton","querySelector","score","messageLose","messageWin","numGenerator","max","Math","floor","random","startNumGenerator","startNum","success","classList","remove","removeEventListener","gameMoves","moveCheck","fieldArray","Array","from","checkY","some","item","index","textContent","checkX","addNumber","filter","number","length","squareForNewNm","YAxisnCheck","direction","i","fieldToCheck","slice","reverse","reverseIndex","map","forEach","inPutIndex","clearNBSP","replace","YAxisAdd","newNum","Number","leftRightMove","oddNums","childNodes","quarter","square","XAxisAdd","assignColours","squareToColour","className","addEventListener","evt","add","clearSquare","previousArray","newGrid","newArray","changeCheck","newtable","JSON","stringify","key","preventDefault"],"mappings":"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","file":"main.6c07b3c3.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\n// write your code here\n\nconst field = document.querySelectorAll('.field-cell');\nconst tableRows = document.querySelectorAll('tr');\nconst startButton = document.querySelector('.start');\nconst score = document.querySelector('.game-score');\nconst messageLose = document.querySelector('.message-lose');\nconst messageWin = document.querySelector('.message-win');\n\nfunction numGenerator(max) {\n  return Math.floor(Math.random() * max);\n}\n\nfunction startNumGenerator() {\n  let startNum = 2;\n  const isItAFour = numGenerator(10);\n\n  if (isItAFour === 4) {\n    startNum = 4;\n  }\n\n  return startNum;\n}\n\nfunction success() {\n  messageWin.classList.remove('hidden');\n  document.removeEventListener('keydown', gameMoves);\n}\n\nfunction moveCheck() {\n  const fieldArray = Array.from(field);\n\n  const checkY = fieldArray.some((item, index) =>\n    index < 12 && item.textContent === fieldArray[index + 4].textContent);\n  const checkX = fieldArray.some((item, index) =>\n    index % 4 !== 3 && item.textContent\n    === fieldArray[index + 1].textContent);\n\n  if (!checkY && !checkX) {\n    messageLose.classList.remove('hidden');\n  }\n}\n\nfunction addNumber() {\n  if (Array.from(field).filter(number => number.textContent).length < 16) {\n    const squareForNewNm = numGenerator(16);\n\n    if (!field[squareForNewNm].textContent) {\n      field[squareForNewNm].textContent = startNumGenerator();\n    } else {\n      addNumber();\n    }\n  }\n};\n\nstartButton.addEventListener('click', (evt) => {\n  document.addEventListener('keydown', gameMoves);\n  score.textContent = 0;\n  startButton.textContent = 'Restart';\n  startButton.classList.add('restart');\n  startButton.classList.remove('start');\n\n  if (startButton.textContent === 'Restart') {\n    messageLose.classList.add('hidden');\n  }\n\n  field.forEach(clearSquare => {\n    clearSquare.textContent = '';\n  });\n\n  addNumber();\n  addNumber();\n  assignColours();\n}\n);\n\nfunction YAxisnCheck(direction) {\n  for (let i = 0; i < 3; i++) {\n    let fieldToCheck = Array.from(field);\n\n    if (direction === 'up') {\n      fieldToCheck = fieldToCheck.slice(4).reverse();\n    }\n\n    if (direction === 'down') {\n      fieldToCheck = fieldToCheck.slice(0, -4);\n    };\n\n    const reverseIndex = fieldToCheck.map((item, index) => index).reverse();\n\n    fieldToCheck.forEach((item, index) => {\n      const inPutIndex = direction === 'up' ? reverseIndex[index] : index + 4;\n\n      if (field[inPutIndex].textContent === '') {\n        field[inPutIndex].textContent = item.textContent;\n        item.textContent = '';\n      }\n    });\n  }\n};\n\nfunction clearNBSP() {\n  const fieldToCheck = Array.from(field);\n\n  fieldToCheck.forEach(item => {\n    item.textContent = item.textContent.replace(/\\s/g, '');\n  });\n}\n\nfunction YAxisAdd(direction) {\n  let fieldToCheck = Array.from(field);\n\n  if (direction === 'down') {\n    fieldToCheck = fieldToCheck.slice(4).reverse();\n  }\n\n  if (direction === 'up') {\n    fieldToCheck = fieldToCheck.slice(0, -4);\n  };\n\n  const reverseIndex = fieldToCheck.map((item, index) => index).reverse();\n\n  fieldToCheck.forEach((item, index) => {\n    const inPutIndex = direction === 'up' ? reverseIndex[index] : index + 4;\n\n    if (direction === 'down'\n      && field[inPutIndex].textContent === field[index].textContent\n      && field[inPutIndex].textContent !== '') {\n      const newNum = Number(2 * field[index].textContent);\n\n      score.textContent = Number(score.textContent) + newNum;\n      field[inPutIndex].textContent = newNum + '\\u00A0';\n      field[index].textContent = '';\n    }\n\n    if (direction === 'up'\n    && field[inPutIndex].textContent === field[inPutIndex + 4].textContent\n    && field[inPutIndex].textContent !== '') {\n      const newNum = Number(2 * field[inPutIndex].textContent);\n\n      score.textContent = Number(score.textContent) + newNum;\n      field[inPutIndex].textContent = newNum + '\\u00A0';\n      field[inPutIndex + 4].textContent = '';\n\n      if (newNum === 2048) {\n        success();\n      }\n    }\n  });\n  clearNBSP();\n};\n\nfunction leftRightMove(reverse) {\n  for (let i = 0; i < 3; i++) {\n    tableRows.forEach(item => {\n      let oddNums = ([...item.childNodes].filter((quarter, index) => {\n        if (index % 2 !== 0) {\n          return quarter;\n        }\n      }));\n\n      if (reverse) {\n        oddNums = oddNums.reverse();\n      };\n\n      oddNums.forEach((square, index) => {\n        if (index <= 2 && oddNums[index + 1].textContent === '') {\n          oddNums[index + 1].textContent = square.textContent;\n          square.textContent = '';\n        }\n      });\n    });\n  }\n}\n\nfunction XAxisAdd(reverse) {\n  tableRows.forEach(item => {\n    let oddNums = ([...item.childNodes].filter((quarter, index) => {\n      if (index % 2 !== 0) {\n        return quarter;\n      }\n    }));\n\n    if (reverse) {\n      oddNums = oddNums.reverse();\n    };\n\n    oddNums.forEach((square, index) => {\n      if (index <= 2 && oddNums[index].textContent\n        === oddNums[index + 1].textContent\n        && oddNums[index].textContent !== '') {\n        const newNum = Number(2 * oddNums[index + 1].textContent);\n\n        score.textContent = Number(score.textContent) + newNum;\n        oddNums[index + 1].textContent = newNum;\n        oddNums[index].textContent = '';\n\n        if (newNum === 2048) {\n          success();\n        }\n      }\n    });\n  });\n};\n\nfunction assignColours() {\n  Array.from(field).forEach(squareToColour => {\n    squareToColour.className\n    = `field-cell field-cell--${squareToColour.textContent}`;\n  });\n}\n\nconst gameMoves = (evt) => {\n  const previousArray = Array.from(field).map(item => {\n    return item.textContent ? item.textContent : '1';\n  });\n\n  function newGrid() {\n    const newArray = Array.from(field).map(item => {\n      return item.textContent ? item.textContent : '1';\n    });\n\n    return newArray;\n  }\n\n  function changeCheck(newtable) {\n    const matching = JSON.stringify(newtable) === JSON.stringify(previousArray);\n\n    if (!matching) {\n      addNumber();\n      assignColours();\n    } else {\n      moveCheck();\n    }\n  }\n\n  if (evt.key === 'ArrowDown') {\n    YAxisnCheck('down');\n    YAxisAdd('up');\n    YAxisnCheck('down');\n    changeCheck(newGrid());\n  }\n\n  if (evt.key === 'ArrowUp') {\n    YAxisnCheck('up');\n    YAxisAdd('down');\n    YAxisnCheck('up');\n    changeCheck(newGrid());\n  }\n\n  if (evt.key === 'ArrowLeft') {\n    leftRightMove('reverse');\n    XAxisAdd();\n    leftRightMove('reverse');\n    changeCheck(newGrid());\n  }\n\n  if (evt.key === 'ArrowRight') {\n    leftRightMove();\n    XAxisAdd('reverse');\n    leftRightMove();\n    changeCheck(newGrid());\n  };\n\n  if (evt.key === ' ') {\n    evt.preventDefault();\n  }\n};\n"]}